
        <Text style={{color:'red'}}>Modal实例演示</Text>
        <Modal
          animated={this.state.animationType}
          transparent={this.state.transparent}
          visible={this.state.modalVisible}
          onRequestClose={() => {this._setModalVisible(false)}}
          >
          <View style={[styles.Modalcontainer, modalBackgroundStyle]}>
            <View style={[styles.innerContainer, innerContainerTransparentStyle]}>
              <Text>Modal视图被显示:{this.state.animationType === false ? '没有' : '有',this.state.animationType}动画效果.</Text>
              <Button
                onPress={this._setModalVisible.bind(this, false)}
                style={styles.modalButton}>
                  关闭Modal
              </Button>
            </View>
          </View>
        </Modal>
        <View style={styles.row}>
          <Text style={styles.rowTitle}>动画类型</Text>
          <Button onPress={this._setAnimationType.bind(this,false)} style={this.state.animationType === false ? {backgroundColor:'red'}: {}}>
            无动画
          </Button>
          <Button onPress={this._setAnimationType.bind(this, true)} style={this.state.animationType === true ? {backgroundColor:'yellow'} : {}}>
            滑动效果
          </Button>
        </View>

        <View style={styles.row}>
          <Text style={styles.rowTitle}>透明</Text>
          <Switch value={this.state.transparent} onValueChange={this._toggleTransparent} />
        </View>

        <Button onPress={this._setModalVisible.bind(this, true)}>
            显示Modal
        </Button>



        <Modal
          animated={true}
          transparent={true}
          visible={this.state.sexModalVisible}
          onRequestClose={() => {this._setModalVisible(false)}}
          >
          <View style={styles.modalContainer}>
            <View style={styles.modalinnerContainer}>
              <PickerIOS
                itemStyle={{fontSize: 25, color: 'black', textAlign: 'center', fontWeight: 'bold'}}
                selectedValue={this.state.sex}
                onValueChange={(sex)=> this.setState({sex})}>
                <PickerIOS.Item
                    key='0'
                    value='男'
                    label='男'
                  />
                  <PickerIOS.Item
                    key='1'
                    value='女'
                    label='女'
                  />
              </PickerIOS>
              <TouchableHighlight style={styles.submitButton}
                onPress={() => {this._setSexModalVisible(false)}}
                underlayColor='transparent'>
              <Text style={styles.submitButtonText}>完成</Text>
              </TouchableHighlight>
            </View>
            </View>

        </Modal>


        <ModalPicker
        modalVisible={this.state.sexModalVisible}
        selectedValueFunc={this.setSex}
        selectedValue={this.state.sex}
        modalVisibleFunc={this.setSexModalVisible}
        arraySet={sexArray}/>
